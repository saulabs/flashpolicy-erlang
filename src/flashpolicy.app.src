{application, flashpolicy, [
  {description, "Erlang Flash Policy File Server"},
  {vsn, "1.0"},
  {modules, [flashpolicy_app, flashpolicy_sup, flashpolicy_srv, util]},
  {registered, [flashpolicy_app, flashpolicy_sup]},
  {applications, [kernel, stdlib]},
  {mod, {flashpolicy_app,[]}},
  {env, [
    {policy_file, "./flashpolicy.xml"},         %% string(): policyfile to serve

    {enable_logging, true},                     %% boolean(): enable or disable logging
    {logfile_path, "./log/"},                   %% string(): path to logfiles. must end with path separator '/'

    {listen_at_interface, any},                 %% any | e.g. {192,168,0,2}: the ip address as tuple to bind at, or 'any' to listen at all interfaces
    {port, 843},                                %% integer(): the port to listen at
    
    {cert_file, "./ssl/host.cert"},             %% the name of the certificate file
    {key_file, "./ssl/host.key"},               %% the name of the secret key file for the certificate
    {key_pwd, none},                            %% the passphrase for the keyfile, if it is protected by a passphrase or none, if it is not protected
    {intermediate_cert_file, none},             %% the name of the file containing the intermediate certificate(s), or none if there aren't any
    
    {bind_also_at, []}                          %% [{interface(), port(), policy_file()}]: additional interfaces and ports to listen at, e.g [{any, 8080, "./otherPolicy.xml"}]
  ]}
]}.
